# manage data {.unnumbered}

::: small
importing data, viewing data, creating data, writing data
:::

This page covers how to import, view, and export data. Use the sidebar to navigate between different sections. The following packages are needed:

::: panel-tabset
## R

For the R code on this page, we will need the `tidyverse` package, and potentially the `haven` package if you are dealing with stata `.dta`, SAS, or SPSS files.

```{r}
#| warning: false
#| message: false

# packages needed:
library(tidyverse)
library(haven)  # only needed if dealing with stata or sas files
```

## Python

## Julia
:::

<br />

#### importing data

Most often, we will have external data that we need to import in order to conduct anlaysis on.

::: panel-tabset
## R

Before we import data, we need to tell our software where our data is stored by setting a directory. We can set the working directory with the `setwd()` function.

```{r}
#| eval: false

setwd("/Users/folder1/folder2")  # put path to folder in quotes

```

You can get the path to any file on your computer as follows:

-   Mac: open finder, go to your folder. Then click view on the top bar, select "show path bar". A path bar should appear on the bottom of your finder window. Then control + click (or right click) your folder in the path bar, and click 'copy "foldername" as path name".
-   Windows: right click your folder, click "copy as path".

Load `.csv` files (comma seperated format, excel) into object `df`:

```{r}
#| warning: false
#| message: false

df = read_csv('data.csv')
```

Load `.dta` files (stata format) into object `df`:

```{r}
#| warning: false
#| message: false
#| eval: false

# library(haven)
df = read_dta('data.dta')
```

## Python

## Julia
:::

<br />

#### preview data

Before starting any data manipulation or analysis, it is useful to understand the structure of our data. We can do this by previewing the data.

::: panel-tabset
## R

Using function `head()` to see the first few rows of the dataframe `df`:

```{r}
#| comment: "#>"
#| class-output: r
#| warning: false
#| message: false

head(df)

```

Using function `glimpse()` to see a summary of columns (variables) of `df`:

```{r}
#| comment: "#>"
#| class-output: r
#| warning: false
#| message: false

glimpse(df)
```

## Python

## Julia
:::

<br />

#### export data

Once we complete data manipulation, we can export our data to our computer.

::: panel-tabset
## R

We can export our data frame `df` to a `.csv` file using `write_csv()`:

```{r}
#| eval: false

df |> write_csv("filename.csv")  # export data to file called filename.csv
```

We can export our data frame `df` to a `.dta` (stata) file using `write_dta()`:

```{r}
#| eval: false

library(haven)
df |> write_dta("filename.dta")  # export data to file called filename.dta
```

## Python

## Julia
:::

<br />
